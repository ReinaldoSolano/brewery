name: Pipeline CI/ CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo código do projeto
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Teste e Empacotamento
        run: mvn clean package

      - name: SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=ReinaldoSolano_brewery
            -Dsonar.organization=reinaldosolano
            -Dsonar.sources=src/main
            -Dsonar.tests=src/test
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          

          
      - name: Log Docker
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir e Enviar Imagem
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/main/docker/Dockerfile.jvm
          push: true
          tags: |
            rssystem/brewery:latest
            rssystem/brewery:v${{ github.run_number }}

      - name: Instalar Cosign
        uses: sigstore/cosign-installer@v3

      - name: Assinar Imagem
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY rssystem/brewery:v${{ github.run_number }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Obtendo o código do projeto
        uses: actions/checkout@v5

      - name: Setup Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      - name: Instalar kubectl
        uses: azure/setup-kubectl@v4

      - name: Verificar Configuração kubectl
        run: kubectl config current-context

      - name: Instalar Cosign
        uses: sigstore/cosign-installer@v3

      - name: Verificar assinatura da imagem
        run: |
          echo "${{ secrets.COSIGN_PUBLIC_KEY }}" > cosign.pub
          cosign verify --key cosign.pub rssystem/brewery:v${{ github.run_number }}

      - name: Alterar tag da imagem
        run: sed -i 's|rssystem/brewery:latest|rssystem/brewery:v${{ github.run_number }}|' k8s/deployment.yml

      - name: Checar secrets
        run: |
          if ! kubectl get secret postgres-credentials; then
            echo "Secret postgres-credentials does not exist. Please create it before deploying the application."
            exit 1
          fi

      - name: Deploy no Kubernetes
        run: kubectl apply -f k8s/deployment.yml
